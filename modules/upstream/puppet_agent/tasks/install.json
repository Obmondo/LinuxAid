{
  "description": "Install the Puppet agent package",
  "parameters": {
    "version": {
      "description": "The version of puppet-agent to install (defaults to latest when no agent is installed)",
      "type": "Optional[String]"
    },
    "collection": {
      "description": "The Puppet collection to install from (defaults to puppet, which maps to the latest collection released)",
      "type": "Optional[Enum[puppet7, puppet8, puppet, puppet7-nightly, puppet8-nightly, puppet-nightly]]"
    },
    "absolute_source": {
      "description": "The absolute source location to find the Puppet agent package",
      "type": "Optional[String]"
    },
    "yum_source": {
      "description": "The source location to find yum repos (defaults to yum.puppet.com)",
      "type": "Optional[String]"
    },
    "apt_source": {
      "description": "The source location to find apt repos (defaults to apt.puppet.com)",
      "type": "Optional[String]"
    },
    "mac_source": {
      "description": "The source location to find mac packages (defaults to downloads.puppet.com)",
      "type": "Optional[String]"
    },
    "windows_source": {
      "description": "The source location to find windows packages (defaults to downloads.puppet.com)",
      "type": "Optional[String]"
    },
    "install_options": {
      "description": "optional install arguments to the windows installer (defaults to REINSTALLMODE=\"amus\")",
      "type": "Optional[String]"
    },
    "stop_service": {
      "description": "Whether to stop the puppet agent service after install",
      "type": "Optional[Boolean]"
    },
    "retry": {
      "description": "The number of retries in case of network connectivity failures",
      "type": "Optional[Integer]",
      "default": 5
    }
  },
  "implementations": [
    {
      "name": "install_shell.sh",
      "requirements": ["shell"],
      "files": ["facts/tasks/bash.sh"],
      "input_method": "environment"
      },
    {
      "name": "install_powershell.ps1",
      "requirements": ["powershell"]
    }
  ],
  "supports_noop": true
}
