# @summary interface definition
# @see https://www.freedesktop.org/software/systemd/man/latest/systemd.network.html
type Systemd::Interface::Network = Struct[{
  'Match'                           => Optional[Systemd::Interface::Network::Match],
  'Link'                            => Optional[Systemd::Interface::Network::Link],
  'SR-IOV'                          => Optional[Systemd::Interface::Network::Sr_iov],
  'Network'                         => Optional[Systemd::Interface::Network::Network],
  'Address'                         => Optional[Variant[
    Systemd::Interface::Network::Address,
    Array[Systemd::Interface::Network::Address],
  ]],
  'Neighbor'                        => Optional[Variant[
    Systemd::Interface::Network::Neighbor,
    Array[Systemd::Interface::Network::Neighbor],
  ]],
  'IPv6AddressLabel'                => Optional[Systemd::Interface::Network::Ipv6addresslabel],
  'RoutingPolicyRule'               => Optional[Variant[
    Systemd::Interface::Network::Routingpolicyrule,
    Array[Systemd::Interface::Network::Routingpolicyrule],
  ]],
  'NextHop'                         => Optional[Variant[
    Systemd::Interface::Network::Nexthop,
    Array[Systemd::Interface::Network::Nexthop],
  ]],
  'Route'                           => Optional[Variant[
    Systemd::Interface::Network::Route,
    Array[Systemd::Interface::Network::Route],
  ]],
  'DHCPv4'                          => Optional[Systemd::Interface::Network::Dhcpv4],
  'DHCPv6'                          => Optional[Systemd::Interface::Network::Dhcpv6],
  'DHCPPrefixDelegation'            => Optional[Systemd::Interface::Network::Dhcpprefixdelegation],
  'IPv6AcceptRA'                    => Optional[Systemd::Interface::Network::Ipv6acceptra],
  'DHCPServer'                      => Optional[Systemd::Interface::Network::Dhcpserver],
  'DHCPServerStaticLease'           => Optional[Variant[
    Systemd::Interface::Network::Dhcpserverstaticlease,
    Array[Systemd::Interface::Network::Dhcpserverstaticlease],
  ]],
  'IPv6SendRA'                      => Optional[Systemd::Interface::Network::Ipv6sendra],
  'IPv6Prefix'                      => Optional[Variant[
    Systemd::Interface::Network::Ipv6prefix,
    Array[Systemd::Interface::Network::Ipv6prefix],
  ]],
  'IPv6RoutePrefix'                 => Optional[Variant[
    Systemd::Interface::Network::Ipv6routeprefix,
    Array[Systemd::Interface::Network::Ipv6routeprefix],
  ]],
  'IPv6PREF64Prefix'                => Optional[Variant[
    Systemd::Interface::Network::Ipv6pref64prefix,
    Array[Systemd::Interface::Network::Ipv6pref64prefix],
  ]],
  'Bridge'                          => Optional[Systemd::Interface::Network::Bridge],
  'BridgeFDB'                       => Optional[Variant[
    Systemd::Interface::Network::Bridgefdb,
    Array[Systemd::Interface::Network::Bridgefdb],
  ]],
  'BridgeMDB'                       => Optional[Variant[
    Systemd::Interface::Network::Bridgemdb,
    Array[Systemd::Interface::Network::Bridgemdb],
  ]],
  'LLDP'                            => Optional[Systemd::Interface::Network::Lldp],
  'CAN'                             => Optional[Systemd::Interface::Network::Can],
  'IPoIB'                           => Optional[Systemd::Interface::Network::Ipoib],
  'QDisc'                           => Optional[Systemd::Interface::Network::Qdisc],
  'NetworkEmulator'                 => Optional[Systemd::Interface::Network::Networkemulator],
  'TokenBucketFilter'               => Optional[Systemd::Interface::Network::Tokenbucketfilter],
  'PIE'                             => Optional[Systemd::Interface::Network::Pie],
  'FlowQueuePIE'                    => Optional[Systemd::Interface::Network::Flowqueuepie],
  'StochasticFairBlue'              => Optional[Systemd::Interface::Network::Stochasticfairblue],
  'StochasticFairnessQueueing'      => Optional[Systemd::Interface::Network::Stochasticfairnessqueueing],
  'BFIFO'                           => Optional[Systemd::Interface::Network::Bfifo],
  'PFIFO'                           => Optional[Systemd::Interface::Network::Pfifo],
  'PFIFOHeadDrop'                   => Optional[Systemd::Interface::Network::Pfifoheaddrop],
  'PFIFOFast'                       => Optional[Systemd::Interface::Network::Pfifofast],
  'CAKE'                            => Optional[Systemd::Interface::Network::Cake],
  'ControlledDelay'                 => Optional[Systemd::Interface::Network::Controlleddelay],
  'DeficitRoundRobinScheduler'      => Optional[Systemd::Interface::Network::Deficitroundrobinscheduler],
  'DeficitRoundRobinSchedulerClass' => Optional[Systemd::Interface::Network::Deficitroundrobinschedulerclass],
  'EnhancedTransmissionSelection'   => Optional[Systemd::Interface::Network::Enhancedtransmissionselection],
  'GenericRandomEarlyDetection'     => Optional[Systemd::Interface::Network::Genericrandomearlydetection],
  'FairQueueingControlledDelay'     => Optional[Systemd::Interface::Network::Fairqueueingcontrolleddelay],
  'FairQueueing'                    => Optional[Systemd::Interface::Network::Fairqueueing],
  'TrivialLinkEqualizer'            => Optional[Systemd::Interface::Network::Triviallinkequalizer],
  'HierarchyTokenBucket'            => Optional[Systemd::Interface::Network::Hierarchytokenbucket],
  'HierarchyTokenBucketClass'       => Optional[Systemd::Interface::Network::Hierarchytokenbucketclass],
  'HeavyHitterFilter'               => Optional[Systemd::Interface::Network::Heavyhitterfilter],
  'QuickFairQueueing'               => Optional[Systemd::Interface::Network::Quickfairqueueing],
  'QuickFairQueueingClass'          => Optional[Systemd::Interface::Network::Quickfairqueueingclass],
  'BridgeVLAN'                      => Optional[Systemd::Interface::Network::Bridgevlan],
}]
