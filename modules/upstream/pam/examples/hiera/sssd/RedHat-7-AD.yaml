---
## nsswitch configuration required for use with sssd
nsswitch::passwd: 'files sss'
nsswitch::shadow: 'files sss'
nsswitch::group: 'files sss'
nsswitch::services: 'files sss'
nsswitch::netgroup: 'files sss'
nsswitch::automount: 'files sss'
pam::allowed_users:
  - (Domain Users) # This is an example of an AD group that would not work without the pam_access module line below due to the space not being permitted using default line seperators

# PAM Customized for use with sssd
pam::pam_auth_lines:
  - '# Managed by Hiera key pam::pam_auth_lines'
  - 'auth        required      pam_env.so'
  - 'auth        sufficient    pam_fprintd.so'
  - 'auth        sufficient    pam_unix.so nullok try_first_pass'
  - 'auth        requisite     pam_succeed_if.so uid >= 500 quiet'
  - 'auth        sufficient    pam_sss.so use_first_pass'
  - 'auth        required      pam_deny.so'
pam::pam_account_lines:
  - '# Managed by Hiera key pam::pam_account_lines'
  - 'account     required      pam_access.so listsep=,' # This line will integrate access control that is compatible with AD groups containing spaces (ex. 'Domain Users')
  - 'account     required      pam_unix.so'
  - 'account     sufficient    pam_localuser.so'
  - 'account     sufficient    pam_succeed_if.so uid < 500 quiet'
  - 'account     [default=bad success=ok user_unknown=ignore] pam_sss.so'
  - 'account     required      pam_permit.so'
pam::pam_password_lines:
  - '# Managed by Hiera key pam::pam_password_lines'
  - 'password    requisite     pam_cracklib.so try_first_pass retry=3 type='
  - 'password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok'
  - 'password    sufficient    pam_sss.so use_authtok'
  - 'password    required      pam_deny.so'
pam::pam_session_lines:
  - '# Managed by Hiera key pam::pam_session_lines'
  - 'session     optional      pam_keyinit.so revoke'
  - 'session     required      pam_limits.so'
  - 'session     optional      pam_oddjob_mkhomedir.so umask=0077'
  - 'session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid'
  - 'session     required      pam_unix.so'
  - 'session     optional      pam_sss.so'
pam::pam_password_auth_lines:
  - '# Managed by Hiera key pam::pam_password_auth_lines'
  - 'auth        required      pam_env.so'
  - 'auth        sufficient    pam_unix.so nullok try_first_pass'
  - 'auth        requisite     pam_succeed_if.so uid >= 500 quiet'
  - 'auth        sufficient    pam_sss.so use_first_pass'
  - 'auth        required      pam_deny.so'
pam::pam_password_account_lines:
  - '# Managed by Hiera key pam::pam_password_account_lines'
  - 'account     required      pam_unix.so'
  - 'account     sufficient    pam_localuser.so'
  - 'account     sufficient    pam_succeed_if.so uid < 500 quiet'
  - 'account     [default=bad success=ok user_unknown=ignore] pam_sss.so'
  - 'account     required      pam_permit.so'
pam::pam_password_password_lines:
  - '# Managed by Hiera key pam::pam_password_password_lines'
  - 'password    requisite     pam_cracklib.so try_first_pass retry=3 type='
  - 'password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok'
  - 'password    sufficient    pam_sss.so use_authtok'
  - 'password    required      pam_deny.so'
pam::pam_password_session_lines:
  - '# Managed by Hiera key pam::pam_password_session_lines'
  - 'session     optional      pam_keyinit.so revoke'
  - 'session     required      pam_limits.so'
  - 'session     optional      pam_oddjob_mkhomedir.so umask=0077'
  - 'session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid'
  - 'session     required      pam_unix.so'
  - 'session     optional      pam_sss.so'
