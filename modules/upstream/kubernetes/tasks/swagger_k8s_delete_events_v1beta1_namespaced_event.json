{
	"description": "delete an Event",
	"input_method": "stdin",
	"parameters":{
		"kube_api":{
			   "description": "Kubernetes API endpoint",
			   "type": "String"
		},
		"ca_file":{
			   "description": "Certificate file path",
			   "type": "Optional[String[1]]"
		},
		"token":{
			   "description": "Authentication token obtained from 'kubectl describe secret <secret_name>'",
			   "type": "Optional[String[1]]"
		},
		
		
		
		
		    
			"series":{
			   "description": "Data about the Event series this event represents or nil if it's a singleton Event.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"apiversion":{
			   "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"deprecatedlasttimestamp":{
			   "description": "Deprecated field assuring backward compatibility with core.v1 Event type",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"reportingcontroller":{
			   "description": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"propagation_policy":{
			   "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"dry_run":{
			   "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"name":{
			   "description": "name of the Event",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"reportinginstance":{
			   "description": "ID of the controller instance, e.g. `kubelet-xyzf`.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"type":{
			   "description": "Type of this event (Normal, Warning), new types could be added in the future.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"deprecatedcount":{
			   "description": "Deprecated field assuring backward compatibility with core.v1 Event type",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"body":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"metadata":{
			   "description": "",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"eventtime":{
			   "description": "Required. Time when this Event was first observed.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"regarding":{
			   "description": "The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"note":{
			   "description": "Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"action":{
			   "description": "What action was taken/failed regarding to the regarding object.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"related":{
			   "description": "Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"namespace":{
			   "description": "object name and auth scope, such as for teams and projects",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"orphan_dependents":{
			   "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the 'orphan' finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"pretty":{
			   "description": "If 'true', then the output is pretty printed.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"reason":{
			   "description": "Why the action was taken.",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"deprecatedfirsttimestamp":{
			   "description": "Deprecated field assuring backward compatibility with core.v1 Event type",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"kind":{
			   "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"deprecatedsource":{
			   "description": "Deprecated field assuring backward compatibility with core.v1 Event type",
			   "type": "Optional[String[1]]"
			}
			,
		    
			"grace_period_seconds":{
			   "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
			   "type": "Optional[String[1]]"
			}
			
	}
}