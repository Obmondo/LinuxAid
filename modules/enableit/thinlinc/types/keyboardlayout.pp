# Generate list with
#
#  man /opt/thinlinc/share/man/man7/xkeyboard-config.7 | \
#    grep -EA9999 '^LAYOUTS' | \
#    grep -EB9999 '^OPTIONS' | \
#    head -n-1 | \
#    tail -n+5 | \
#    sed -r 's/.*?\\u2502([^ ]+).*?/\1/g' | \
#    grep -vE '^ '
type ThinLinc::KeyboardLayout = Enum[
  'us',
  'us(chr)',
  'us(euro)',
  'us(intl)',
  'us(alt-intl)',
  'us(colemak)',
  'us(dvorak)',
  'us(dvorak-intl)',
  'us(dvorak-alt-intl)',
  'us(dvorak-l)',
  'us(dvorak-r)',
  'us(dvorak-classic)',
  'us(dvp)',
  'us(rus)',
  'us(mac)',
  'us(altgr-intl)',
  'us(olpc2)',
  'us(hbs)',
  'us(workman)',
  'us(workman-intl)',
  'af',
  'af(ps)',
  'af(uz)',
  'af(olpc-ps)',
  'af(fa-olpc)',
  'af(uz-olpc)',
  'ara',
  'ara(azerty)',
  'ara(azerty_digits)',
  'ara(digits)',
  'ara(qwerty)',
  'ara(qwerty_digits)',
  'ara(buckwalter)',
  'al',
  'am',
  'am(phonetic)',
  'am(phonetic-alt)',
  'am(eastern)',
  'am(western)',
  'am(eastern-alt)',
  'at',
  'at(legacy)',
  'at(nodeadkeys)',
  'at(sundeadkeys)',
  'at(mac)',
  'az',
  'az(cyrillic)',
  'by',
  'by(legacy)',
  'by(latin)',
  'be',
  'be(oss)',
  'be(oss_latin9)',
  'be(oss_sundeadkeys)',
  'be(iso-alternate)',
  'be(nodeadkeys)',
  'be(sundeadkeys)',
  'be(wang)',
  'bd',
  'bd(probhat)',
  'in',
  'in(ben)',
  'in(ben_probhat)',
  'in(ben_baishakhi)',
  'in(ben_bornona)',
  'in(ben_gitanjali)',
  'in(ben_inscript)',
  'in(guj)',
  'in(guru)',
  'in(jhelum)',
  'in(kan)',
  'in(mal)',
  'in(mal_lalitha)',
  'in(mal_enhanced)',
  'in(ori)',
  'in(tam_unicode)',
  'in(tam_keyboard_with_numerals)',
  'in(tam_TAB)',
  'in(tam_TSCII)',
  'in(tam)',
  'in(tel)',
  'in(urd-phonetic)',
  'in(urd-phonetic3)',
  'in(urd-winkeys)',
  'in(bolnagri)',
  'in(hin-wx)',
  'in(eng)',
  'ba',
  'ba(alternatequotes)',
  'ba(unicode)',
  'ba(unicodeus)',
  'ba(us)',
  'br',
  'br(nodeadkeys)',
  'br(dvorak)',
  'br(nativo)',
  'br(nativo-us)',
  'br(nativo-epo)',
  'bg',
  'bg(phonetic)',
  'bg(bas_phonetic)',
  'ma',
  'ma(french)',
  'ma(tifinagh)',
  'ma(tifinagh-alt)',
  'ma(tifinagh-alt-phonetic)',
  'ma(tifinagh-extended)',
  'ma(tifinagh-phonetic)',
  'ma(tifinagh-extended-phonetic)',
  'cm',
  'cm(french)',
  'cm(qwerty)',
  'cm(azerty)',
  'cm(dvorak)',
  'mm',
  'ca',
  'ca(fr-dvorak)',
  'ca(fr-legacy)',
  'ca(multix)',
  'ca(multi)',
  'ca(multi-2gr)',
  'ca(ike)',
  'ca(eng)',
  'cd',
  'cn',
  'cn(tib)',
  'cn(tib_asciinum)',
  'cn(uig)',
  'hr',
  'hr(alternatequotes)',
  'hr(unicode)',
  'hr(unicodeus)',
  'hr(us)',
  'cz',
  'cz(bksl)',
  'cz(qwerty)',
  'cz(qwerty_bksl)',
  'cz(ucw)',
  'cz(dvorak-ucw)',
  'dk',
  'dk(nodeadkeys)',
  'dk(mac)',
  'dk(mac_nodeadkeys)',
  'dk(dvorak)',
  'nl',
  'nl(sundeadkeys)',
  'nl(mac)',
  'nl(std)',
  'bt',
  'ee',
  'ee(nodeadkeys)',
  'ee(dvorak)',
  'ee(us)',
  'ir',
  'ir(pes_keypad)',
  'ir(ku)',
  'ir(ku_f)',
  'ir(ku_alt)',
  'ir(ku_ara)',
  'iq',
  'iq(ku)',
  'iq(ku_f)',
  'iq(ku_alt)',
  'iq(ku_ara)',
  'fo',
  'fo(nodeadkeys)',
  'fi',
  'fi(classic)',
  'fi(nodeadkeys)',
  'fi(smi)',
  'fi(mac)',
  'fr',
  'fr(nodeadkeys)',
  'fr(sundeadkeys)',
  'fr(oss)',
  'fr(oss_latin9)',
  'fr(oss_nodeadkeys)',
  'fr(oss_sundeadkeys)',
  'fr(latin9)',
  'fr(latin9_nodeadkeys)',
  'fr(latin9_sundeadkeys)',
  'fr(bepo)',
  'fr(bepo_latin9)',
  'fr(dvorak)',
  'fr(mac)',
  'fr(bre)',
  'fr(oci)',
  'fr(geo)',
  'gh',
  'gh(generic)',
  'gh(akan)',
  'gh(ewe)',
  'gh(fula)',
  'gh(ga)',
  'gh(hausa)',
  'gh(avn)',
  'gh(gillbt)',
  'gn',
  'ge',
  'ge(ergonomic)',
  'ge(mess)',
  'ge(ru)',
  'ge(os)',
  'de',
  'de(deadacute)',
  'de(deadgraveacute)',
  'de(nodeadkeys)',
  'de(ro)',
  'de(ro_nodeadkeys)',
  'de(dvorak)',
  'de(sundeadkeys)',
  'de(neo)',
  'de(mac)',
  'de(mac_nodeadkeys)',
  'de(dsb)',
  'de(dsb_qwertz)',
  'de(qwerty)',
  'de(ru)',
  'gr',
  'gr(simple)',
  'gr(extended)',
  'gr(nodeadkeys)',
  'gr(polytonic)',
  'hu',
  'hu(standard)',
  'hu(nodeadkeys)',
  'hu(qwerty)',
  'hu(101_qwertz_comma_dead)',
  'hu(101_qwertz_comma_nodead)',
  'hu(101_qwertz_dot_dead)',
  'hu(101_qwertz_dot_nodead)',
  'hu(101_qwerty_comma_dead)',
  'hu(101_qwerty_comma_nodead)',
  'hu(101_qwerty_dot_dead)',
  'hu(101_qwerty_dot_nodead)',
  'hu(102_qwertz_comma_dead)',
  'hu(102_qwertz_comma_nodead)',
  'hu(102_qwertz_dot_dead)',
  'hu(102_qwertz_dot_nodead)',
  'hu(102_qwerty_comma_dead)',
  'hu(102_qwerty_comma_nodead)',
  'hu(102_qwerty_dot_dead)',
  'hu(102_qwerty_dot_nodead)',
  'is',
  'is(Sundeadkeys)',
  'is(nodeadkeys)',
  'is(mac)',
  'is(dvorak)',
  'il',
  'il(lyx)',
  'il(phonetic)',
  'il(biblical)',
  'it',
  'it(nodeadkeys)',
  'it(mac)',
  'it(us)',
  'it(geo)',
  'it(ibm)',
  'jp',
  'jp(kana)',
  'jp(kana86)',
  'jp(OADG109A)',
  'jp(mac)',
  'jp(dvorak)',
  'kg',
  'kg(phonetic)',
  'kh',
  'kz',
  'kz(ruskaz)',
  'kz(kazrus)',
  'la',
  'la(stea)',
  'latam',
  'latam(nodeadkeys)',
  'latam(deadtilde)',
  'latam(sundeadkeys)',
  'lt',
  'lt(std)',
  'lt(us)',
  'lt(ibm)',
  'lt(lekp)',
  'lt(lekpa)',
  'lv',
  'lv(apostrophe)',
  'lv(tilde)',
  'lv(fkey)',
  'lv(modern)',
  'lv(ergonomic)',
  'lv(adapted)',
  'mao',
  'me',
  'me(cyrillic)',
  'me(cyrillicyz)',
  'me(latinunicode)',
  'me(latinyz)',
  'me(latinunicodeyz)',
  'me(cyrillicalternatequotes)',
  'me(latinalternatequotes)',
  'mk',
  'mk(nodeadkeys)',
  'mt',
  'mt(us)',
  'mn',
  'no',
  'no(nodeadkeys)',
  'no(dvorak)',
  'no(smi)',
  'no(smi_nodeadkeys)',
  'no(mac)',
  'no(mac_nodeadkeys)',
  'no(colemak)',
  'pl',
  'pl(legacy)',
  'pl(qwertz)',
  'pl(dvorak)',
  'pl(dvorak_quotes)',
  'pl(dvorak_altquotes)',
  'pl(csb)',
  'pl(szl)',
  'pl(ru_phonetic_dvorak)',
  'pl(dvp)',
  'pt',
  'pt(nodeadkeys)',
  'pt(sundeadkeys)',
  'pt(mac)',
  'pt(mac_nodeadkeys)',
  'pt(mac_sundeadkeys)',
  'pt(nativo)',
  'pt(nativo-us)',
  'pt(nativo-epo)',
  'ro',
  'ro(cedilla)',
  'ro(std)',
  'ro(std_cedilla)',
  'ro(winkeys)',
  'ru',
  'ru(phonetic)',
  'ru(phonetic_winkeys)',
  'ru(typewriter)',
  'ru(legacy)',
  'ru(typewriter-legacy)',
  'ru(tt)',
  'ru(os_legacy)',
  'ru(os_winkeys)',
  'ru(cv)',
  'ru(cv_latin)',
  'ru(udm)',
  'ru(kom)',
  'ru(sah)',
  'ru(xal)',
  'ru(dos)',
  'ru(srp)',
  'ru(bak)',
  'ru(chm)',
  'rs',
  'rs(yz)',
  'rs(latin)',
  'rs(latinunicode)',
  'rs(latinyz)',
  'rs(latinunicodeyz)',
  'rs(alternatequotes)',
  'rs(latinalternatequotes)',
  'rs(rue)',
  'si',
  'si(alternatequotes)',
  'si(us)',
  'sk',
  'sk(bksl)',
  'sk(qwerty)',
  'sk(qwerty_bksl)',
  'es',
  'es(nodeadkeys)',
  'es(deadtilde)',
  'es(sundeadkeys)',
  'es(dvorak)',
  'es(ast)',
  'es(cat)',
  'es(mac)',
  'se',
  'se(nodeadkeys)',
  'se(dvorak)',
  'se(rus)',
  'se(rus_nodeadkeys)',
  'se(smi)',
  'se(mac)',
  'se(svdvorak)',
  'se(swl)',
  'ch',
  'ch(legacy)',
  'ch(de_nodeadkeys)',
  'ch(de_sundeadkeys)',
  'ch(fr)',
  'ch(fr_nodeadkeys)',
  'ch(fr_sundeadkeys)',
  'ch(fr_mac)',
  'ch(de_mac)',
  'sy',
  'sy(syc)',
  'sy(syc_phonetic)',
  'sy(ku)',
  'sy(ku_f)',
  'sy(ku_alt)',
  'tj',
  'tj(legacy)',
  'lk',
  'lk(tam_unicode)',
  'lk(tam_TAB)',
  'th',
  'th(tis)',
  'th(pat)',
  'tr',
  'tr(f)',
  'tr(alt)',
  'tr(sundeadkeys)',
  'tr(ku)',
  'tr(ku_f)',
  'tr(ku_alt)',
  'tr(intl)',
  'tr(crh)',
  'tr(crh_f)',
  'tr(crh_alt)',
  'tw',
  'tw(indigenous)',
  'tw(saisiyat)',
  'ua',
  'ua(phonetic)',
  'ua(typewriter)',
  'ua(winkeys)',
  'ua(legacy)',
  'ua(rstu)',
  'ua(rstu_ru)',
  'ua(homophonic)',
  'gb',
  'gb(extd)',
  'gb(intl)',
  'gb(dvorak)',
  'gb(dvorakukp)',
  'gb(mac)',
  'gb(mac_intl)',
  'gb(colemak)',
  'uz',
  'uz(latin)',
  'vn',
  'kr',
  'kr(kr104)',
  'nec_vndr/jp',
  'ie',
  'ie(CloGaelach)',
  'ie(UnicodeExpert)',
  'ie(ogam)',
  'ie(ogam_is434)',
  'pk',
  'pk(urd-crulp)',
  'pk(urd-nla)',
  'pk(ara)',
  'pk(snd)',
  'mv',
  'za',
  'epo',
  'epo(legacy)',
  'np',
  'ng',
  'ng(igbo)',
  'ng(yoruba)',
  'ng(hausa)',
  'et',
  'sn',
  'brai',
  'brai(left_hand)',
  'brai(right_hand)',
  'tm',
  'tm(alt)',
  'ml',
  'ml(fr-oss)',
  'ml(us-mac)',
  'ml(us-intl)',
  'tz',
  'ke',
  'ke(kik)',
  'bw',
  'ph',
  'ph(qwerty-bay)',
  'ph(capewell-dvorak)',
  'ph(capewell-dvorak-bay)',
  'ph(capewell-qwerf2k6)',
  'ph(capewell-qwerf2k6-bay)',
  'ph(colemak)',
  'ph(colemak-bay)',
  'ph(dvorak)',
  'ph(dvorak-bay)',
  'md',
  'md(gag)',
]
