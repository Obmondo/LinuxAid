type Eit_types::Resource::Mount = Variant[
  Undef,
  Struct[{
  # Control what to do with this mount. Set this...
  ensure      => Eit_types::Resource::Mount::Ensure,
  # Whether to mount the mount at boot.  Not all...
  atboot      => Boolean,
  # The device to fsck.  This is property is only...
  blockdevice => Optional[Stdlib::Absolutepath],
  # The device providing the mount.  This can be...
  device      => Variant[
    Stdlib::Absolutepath,
    # Try to match NFS shares
    Pattern[/\A[a-zA-Z0-9.-]+:[a-zA-Z0-9_\/.-]+\Z/],
    # Could also be a zfs mount
    Pattern[/\A[A-Za-z0-9._-]+(\/[A-Za-z0-9._-]+)*\Z/],
  ],
  # # Whether to dump the mount.  Not all platform...
  # dump        => Boolean,
  # The mount type.  Valid values depend on the...
  fstype      => Variant[Eit_types::FilesystemType, Enum['auto']],
  # A single string containing options for the...
  options     => Array[String],
  # # The pass in which the mount is...
  # pass        => String,
  # # The specific backend to use for this `mount...
  # provider    => ???,
  # Whether the mount can be remounted  `mount -o...
  remounts    => Optional[Boolean],
  # The file in which to store the mount table....
  target      => Optional[Stdlib::Absolutepath],
}]]
